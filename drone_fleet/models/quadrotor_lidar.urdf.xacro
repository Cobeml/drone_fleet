<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="quadrotor">
  
  <!-- Properties -->
  <xacro:property name="body_radius" value="0.3"/>
  <xacro:property name="body_height" value="0.1"/>
  <xacro:property name="mass" value="1.5"/>
  <xacro:property name="arm_length" value="0.25"/>
  <xacro:property name="rotor_radius" value="0.1"/>
  <xacro:property name="rotor_height" value="0.01"/>
  
  <!-- Base Link -->
  <link name="base_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.02"/>
    </inertial>
    
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${body_radius}" length="${body_height}"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 0.8 1"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${body_radius}" length="${body_height}"/>
      </geometry>
    </collision>
  </link>
  
  <!-- Rotor Macro -->
  <xacro:macro name="rotor" params="prefix x y">
    <link name="${prefix}_rotor">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.05"/>
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0002"/>
      </inertial>
      
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${rotor_radius}" length="${rotor_height}"/>
        </geometry>
        <material name="gray">
          <color rgba="0.5 0.5 0.5 1"/>
        </material>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${rotor_radius}" length="${rotor_height}"/>
        </geometry>
      </collision>
    </link>
    
    <joint name="${prefix}_rotor_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_rotor"/>
      <origin xyz="${x} ${y} ${body_height/2 + rotor_height/2}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>
  </xacro:macro>
  
  <!-- Create four rotors -->
  <xacro:rotor prefix="front_right" x="${arm_length}" y="${-arm_length}"/>
  <xacro:rotor prefix="front_left" x="${arm_length}" y="${arm_length}"/>
  <xacro:rotor prefix="rear_right" x="${-arm_length}" y="${-arm_length}"/>
  <xacro:rotor prefix="rear_left" x="${-arm_length}" y="${arm_length}"/>
  
  <!-- LiDAR Link -->
  <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.83"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.05" length="0.07"/>
      </geometry>
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.05" length="0.07"/>
      </geometry>
    </collision>
  </link>
  
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${body_height/2 + 0.05}" rpy="0 0 0"/>
  </joint>
  
  <!-- IMU Link -->
  <link name="imu_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
    </inertial>
  </link>
  
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
  
  <!-- Gazebo Plugins -->
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  
  <gazebo reference="front_right_rotor">
    <material>Gazebo/Gray</material>
  </gazebo>
  
  <gazebo reference="front_left_rotor">
    <material>Gazebo/Gray</material>
  </gazebo>
  
  <gazebo reference="rear_right_rotor">
    <material>Gazebo/Gray</material>
  </gazebo>
  
  <gazebo reference="rear_left_rotor">
    <material>Gazebo/Gray</material>
  </gazebo>
  
  <gazebo reference="lidar_link">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- Velodyne VLP-16 LiDAR Plugin -->
  <gazebo reference="lidar_link">
    <sensor name="velodyne_lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.0</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.261799</min_angle>
            <max_angle>0.261799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>100.0</max>
          <resolution>0.02</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="velodyne_plugin" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>/drone1</namespace>
          <remapping>~/out:=lidar/points</remapping>
        </ros>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  
  <!-- IMU Plugin -->
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <namespace>/drone1</namespace>
          <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
    </sensor>
  </gazebo>
  
  <!-- Model Control Plugin -->
  <gazebo>
    <plugin name="model_control" filename="libgazebo_ros_planar_move.so">
      <ros>
        <namespace>/drone1</namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>
      <update_rate>100</update_rate>
      <publish_rate>10</publish_rate>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>
  
</robot>